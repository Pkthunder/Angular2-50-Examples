{
  "name": "tsconfig",
  "version": "1.0.1",
  "description": "TypeScript project file specification + implementation",
  "main": "dist/tsconfig.js",
  "typescript": {
    "definition": "tsconfig.d.ts"
  },
  "files": [
    "dist/",
    "LICENSE",
    "tsconfig.d.ts"
  ],
  "scripts": {
    "lint": "# TODO",
    "build": "npm run build-ts",
    "build-ts": "rm -rf dist && tsc",
    "test-spec": "mocha dist/**/*.spec.js -R spec --bail",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- dist/**/*.spec.js -R spec --bail",
    "test": "npm run build && npm run lint && npm run test-cov",
    "prepublish": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TypeStrong/tsconfig.git"
  },
  "keywords": [
    "TypeScript",
    "compiler",
    "config",
    "tsconfig",
    "json",
    "resolve"
  ],
  "author": {
    "name": "Blake Embrey",
    "email": "hello@blakeembrey.com",
    "url": "http://blakeembrey.me"
  },
  "contributors": [
    {
      "name": "basaratali@gmail.com"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TypeStrong/tsconfig/issues"
  },
  "homepage": "https://github.com/TypeStrong/tsconfig",
  "dependencies": {
    "globby": "^2.1.0",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "chai": "^3.0.0",
    "istanbul": "^0.3.17",
    "mocha": "^2.0.1",
    "typescript": "^1.5.0-beta"
  },
  "readme": "# TSConfig\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][downloads-image]][downloads-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\nResolve and parse [`tsconfig.json`](https://github.com/Microsoft/TypeScript/wiki/tsconfig.json), with support for `filesGlob` (array of glob strings).\n\n## Usage\n\nSee the [TypeScript wiki](https://github.com/Microsoft/TypeScript/wiki/tsconfig.json) for information on setting up `tsconfig.json`. Additionally, this module will parse the `filesGlob` option, if it exists.\n\n### API\n\n* `resolve(dir: string, cb: (err: Error, filename?: string) => any)` Aschronously resolve the location of `tsconfig.json`\n* `resolveSync(dir: string): string` Synchronous version of `resolve`\n* `load(dir: string, cb: (err: Error, config?: TSConfig) => any)` Resolve, load and parse `tsconfig.json` from a directory\n* `loadSync(dir: string): TSConfig` Synchronous version of `load`\n* `readFile(filename: string, cb: (err: Error, config?: TSConfig) => any)` Read any file as `tsconfig.json`\n* `readFileSync(filename: string): TSConfig` Synchronous version of `readFile`\n* `parseFile(contents: string, filename: string, cb: (err: Error, config?: TSConfig) => any)` Parse any string using TSConfig\n* `parseFileSync(contents: string, filename: string): TSConfig` Synchronous version of `parseFile`\n* `resolveConfig(data: TSConfig, filename: string, cb: (err: Error, config?: TSConfig) => any)` Resolve a `tsconfig.json` object against a filename (E.g. `filesGlob`)\n* `resolveConfigSync(data: TSConfig, filename: string): TSConfig` Synchronous version of `resolveConfig`\n\n## Contributing\n\nPlease open issues for discussion.\n\n## License\n\nMIT License\n\n[npm-image]: https://img.shields.io/npm/v/tsconfig.svg?style=flat\n[npm-url]: https://npmjs.org/package/tsconfig\n[downloads-image]: https://img.shields.io/npm/dm/tsconfig.svg?style=flat\n[downloads-url]: https://npmjs.org/package/tsconfig\n[travis-image]: https://img.shields.io/travis/TypeStrong/tsconfig.svg?style=flat\n[travis-url]: https://travis-ci.org/TypeStrong/tsconfig\n[coveralls-image]: https://img.shields.io/coveralls/TypeStrong/tsconfig.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/TypeStrong/tsconfig?branch=master\n",
  "readmeFilename": "README.md",
  "_id": "tsconfig@1.0.1",
  "_from": "tsconfig@>=1.0.1 <2.0.0"
}
