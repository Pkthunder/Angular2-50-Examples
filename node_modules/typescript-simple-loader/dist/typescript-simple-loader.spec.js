var path_1 = require('path');
var fs_1 = require('fs');
var chai_1 = require('chai');
var extend = require('xtend');
var webpack = require('webpack');
var FIXTURES_DIR = path_1.join(__dirname, '..', 'fixtures');
var TMP_DIR = path_1.join(__dirname, '..', '.tmp');
var OUTPUT_FILENAME = 'output.js';
function test(entryFile, expectedFile, options, done) {
    var config = extend({
        entry: entryFile,
        output: {
            path: TMP_DIR,
            filename: OUTPUT_FILENAME
        },
        module: {
            loaders: [
                {
                    test: /\.tsx?$/,
                    loader: path_1.join(__dirname, '..'),
                    exclude: /node_modules/
                }
            ]
        }
    }, options);
    webpack(config, function (err, result) {
        chai_1.expect(result.compilation.errors).to.be.empty;
        chai_1.expect(result.compilation.warnings).to.be.empty;
        fs_1.readFile(path_1.join(TMP_DIR, OUTPUT_FILENAME), 'utf8', function (_, result) {
            fs_1.readFile(expectedFile, 'utf8', function (_, expected) {
                chai_1.expect(result).to.equal(expected);
                return done(err);
            });
        });
    });
}
describe('fixtures', function () {
    this.timeout(5000);
    it('simple', function (done) {
        test(path_1.join(FIXTURES_DIR, 'simple', 'source.ts'), path_1.join(FIXTURES_DIR, 'simple', 'output.js'), null, done);
    });
    it('ntypescript', function (done) {
        test(path_1.join(FIXTURES_DIR, 'simple', 'source.ts'), path_1.join(FIXTURES_DIR, 'simple', 'output.js'), {
            module: {
                loaders: [
                    {
                        test: /\.tsx?$/,
                        loader: path_1.join(__dirname, '..') + '?compiler=ntypescript',
                        exclude: /node_modules/
                    }
                ]
            }
        }, done);
    });
    it('ignore warnings', function (done) {
        test(path_1.join(FIXTURES_DIR, 'ignore-warnings', 'source.ts'), path_1.join(FIXTURES_DIR, 'ignore-warnings', 'output.js'), {
            module: {
                loaders: [
                    {
                        test: /\.tsx?$/,
                        loader: path_1.join(__dirname, '..') + '?ignoreWarnings[]=2304',
                        exclude: /node_modules/
                    }
                ]
            }
        }, done);
    });
    it('tsx', function (done) {
        test(path_1.join(FIXTURES_DIR, 'tsx', 'source.tsx'), path_1.join(FIXTURES_DIR, 'tsx', 'output.js'), {
            context: path_1.join(FIXTURES_DIR, 'tsx'),
            module: {
                loaders: [
                    {
                        test: /\.tsx?$/,
                        loader: path_1.join(__dirname, '..') + '?compiler=ntypescript',
                        exclude: /node_modules/
                    }
                ]
            }
        }, done);
    });
});
//# sourceMappingURL=typescript-simple-loader.spec.js.map