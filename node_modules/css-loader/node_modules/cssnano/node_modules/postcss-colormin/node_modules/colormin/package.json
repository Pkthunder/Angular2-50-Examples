{
  "name": "colormin",
  "version": "1.0.2",
  "description": "Turn a CSS color into its smallest representation.",
  "main": "index.js",
  "homepage": "https://github.com/ben-eb/colormin",
  "scripts": {
    "test": "tape test.js"
  },
  "keywords": [
    "color",
    "colors",
    "compression",
    "css",
    "minify"
  ],
  "author": {
    "name": "Ben Briggs",
    "email": "beneb.info@gmail.com",
    "url": "http://beneb.info"
  },
  "license": "MIT",
  "dependencies": {
    "color": "^0.9.0",
    "css-color-names": "0.0.1"
  },
  "devDependencies": {
    "tape": "^4.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ben-eb/colormin.git"
  },
  "readme": "# colormin [![Build Status](https://travis-ci.org/ben-eb/colormin.svg?branch=master)][ci] [![NPM version](https://badge.fury.io/js/colormin.svg)][npm] [![Dependency Status](https://gemnasium.com/ben-eb/colormin.svg)][deps]\n\n> Turn a CSS color into its smallest representation.\n\n## Install\n\nWith [npm](https://npmjs.org/package/colormin) do:\n\n```\nnpm install colormin --save\n```\n\n## Example\n\n```js\nvar colormin = require('colormin');\nconsole.log(colormin('rgba(255, 0, 0, 1)'));\n\n// => 'red'\n```\n\ncolormin works for rgb, rgba, hsl, hsla, hex & css color keywords. See more\nexample output in the [tests](test.js). Note that colormin does not convert\ninvalid CSS colors; it is not a color validator itself.\n\n## Contributing\n\nPull requests are welcome. If you add functionality, then please add unit tests\nto cover it.\n\n## License\n\nMIT Â© [Ben Briggs](http://beneb.info)\n\n[ci]:   https://travis-ci.org/ben-eb/colormin\n[deps]: https://gemnasium.com/ben-eb/colormin\n[npm]:  http://badge.fury.io/js/colormin\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ben-eb/colormin/issues"
  },
  "_id": "colormin@1.0.2",
  "_from": "colormin@>=1.0.1 <2.0.0"
}
