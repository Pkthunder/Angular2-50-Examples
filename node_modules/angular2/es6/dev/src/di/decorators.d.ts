import { InjectMetadata, OptionalMetadata, InjectableMetadata, SelfMetadata, AncestorMetadata, UnboundedMetadata } from './metadata';
/**
 * Factory for creating {@link InjectMetadata}.
 */
export interface InjectFactory {
    (token: any): any;
    new (token: any): InjectMetadata;
}
/**
 * Factory for creating {@link OptionalMetadata}.
 */
export interface OptionalFactory {
    (): any;
    new (): OptionalMetadata;
}
/**
 * Factory for creating {@link InjectableMetadata}.
 */
export interface InjectableFactory {
    (): any;
    new (): InjectableMetadata;
}
/**
 * Factory for creating {@link SelfMetadata}.
 */
export interface SelfFactory {
    (): any;
    new (): SelfMetadata;
}
/**
 * Factory for creating {@link AncestorMetadata}.
 */
export interface AncestorFactory {
    (visibility?: {
        self: boolean;
    }): any;
    new (visibility?: {
        self: boolean;
    }): AncestorMetadata;
}
/**
 * Factory for creating {@link UnboundedMetadata}.
 */
export interface UnboundedFactory {
    (visibility?: {
        self: boolean;
    }): any;
    new (visibility?: {
        self: boolean;
    }): UnboundedMetadata;
}
/**
 * Factory for creating {@link InjectMetadata}.
 */
export declare var Inject: InjectFactory;
/**
 * Factory for creating {@link OptionalMetadata}.
 */
export declare var Optional: OptionalFactory;
/**
 * Factory for creating {@link InjectableMetadata}.
 */
export declare var Injectable: InjectableFactory;
/**
 * Factory for creating {@link SelfMetadata}.
 */
export declare var Self: SelfFactory;
/**
 * Factory for creating {@link AncestorMetadata}.
 */
export declare var Ancestor: AncestorFactory;
/**
 * Factory for creating {@link UnboundedMetadata}.
 */
export declare var Unbounded: UnboundedFactory;
