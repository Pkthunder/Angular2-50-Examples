import { BaseException } from "angular2/src/facade/lang";
export class ExpressionChangedAfterItHasBeenChecked extends BaseException {
    constructor(proto, change) {
        super(`Expression '${proto.expressionAsString}' has changed after it was checked. ` +
            `Previous value: '${change.previousValue}'. Current value: '${change.currentValue}'`);
    }
}
export class ChangeDetectionError extends BaseException {
    constructor(proto, originalException, originalStack) {
        super(`${originalException} in [${proto.expressionAsString}]`, originalException, originalStack);
        this.location = proto.expressionAsString;
    }
}
export class DehydratedException extends BaseException {
    constructor() {
        super('Attempt to detect changes on a dehydrated detector.');
    }
}
//# sourceMappingURL=exceptions.js.map